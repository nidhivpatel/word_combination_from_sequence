# -*- coding: utf-8 -*-
"""word_combinations.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BejAmQ3aqRTc01H1fGJYmlNlFkWL3Wm-
"""

from typing import Sequence, List, Dict
from collections import defaultdict

# Pronunciation dictionary mapping words to their possible phoneme sequences
pronunciation_dict = {
    "ABACUS": [["AE", "B", "AH", "K", "AH", "S"]],
    "BOOK": [["B", "UH", "K"]],
    "THEIR": [["DH", "EH", "R"]],
    "THERE": [["DH", "EH", "R"]],
    "TOMATO": [["T", "AH", "M", "AA", "T", "OW"], ["T", "AH", "M", "EY", "T", "OW"]],
}

def find_word_combos_with_pronunciation(phonemes: Sequence[str]) -> Sequence[Sequence[str]]:
    # Create a map of: pronounciation -> word
    to_words = defaultdict(list)
    n = len(phonemes)
    for word, word_phonemes_list in pronunciation_dict.items(): # TC: O(length of dictionary)
        for word_phonemes in word_phonemes_list:
            pronounciation = tuple(word_phonemes) # Convert list to tuple for hashability
            to_words[pronounciation].append(word)

    # sequences[i] stores all possible sequences of words for phonemes[i, n - 1]
    sequences = [[]] * (n + 1)
    sequences[n] = [[]] # Base case: empty sequence at the end

    for start in range(n - 1, -1, -1): # Iterate from the end to the start | TC: O(square of length of input)
        seqs = []
        for end in range(start, n):
            candidate_pronc = tuple(phonemes[start: end + 1]) #create tuple of phonemes from start to end
            if candidate_pronc in to_words:
                for candidate_word in to_words[candidate_pronc]:
                    for next_words in sequences[end + 1]:
                        seqs.append([candidate_word] + next_words)
        sequences[start] = seqs
    return sequences[0]

# Testcase 1
phonemes = ["AE", "B", "AH", "K", "AH", "S"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 2
phonemes = ["B", "UH", "K"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 3
phonemes = ["DH", "EH", "R"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 4
phonemes = ["DH", "EH", "R", "DH", "EH", "R"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 5
phonemes = ["T", "AH", "M", "AA", "T", "OW"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 6
phonemes = ["T", "AH", "M", "EY", "T", "OW"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)

# Testcase 7
phonemes = ["T", "AH", "M", "EY", "T", "OW", "T", "AH", "M", "AA", "T", "OW"]
result = find_word_combos_with_pronunciation(phonemes)
print(result)